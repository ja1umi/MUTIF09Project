--- ./MON6809.ASM	2010-11-27 08:13:42.000000000 +0900
+++ ./MON6809m.ASM	2018-08-07 16:23:32.225996900 +0900
@@ -10,7 +10,7 @@
 *	F  FILL
 *	C  CONTINUE FROM BREAKPOINT
 *
-ACIACS	EQU	$EFFE
+ACIACS	EQU	$B000
 ACIADA	EQU	ACIACS+1
 	ORG	$F000
 
@@ -19,27 +19,28 @@
 	JMP	,X
 
 * NMI SEQUENCE
-POWDWN	LDX	NIO	GET NMI VECTOR
+POWDWN	LDX	NIO			; GET NMI VECTOR
 	JMP	,X
 
 **
 INZACI	LDX	#ACIACS
 	LDA	#3
 	STA	,X
-	LDA	#$15
+*	LDA	#$15
+	LDA	#$95
 	STA	,X
 	RTS
 **
 * INPUT HEX CHAR
 INHEX	LBSR	INCH
 INHEX2	CMPA	#$30
-	BMI	LOAD19	NOT HEX
+	BMI	LOAD19			; NOT HEX
 	CMPA	#$39
 	BLE	IN1HG
 	CMPA	#$41
-	BMI	LOAD19	NOT HEX
+	BMI	LOAD19			; NOT HEX
 	CMPA	#$46
-	BGT	LOAD19	NOT HEX
+	BGT	LOAD19			; NOT HEX
 	SUBA	#7
 IN1HG	RTS
 **
@@ -75,11 +76,11 @@
 C1	LBRA	CONTRL	
 **
 * BUILD ADDRESS
-BADDR	BSR	BYTE	READ 2 FRAMES
+BADDR	BSR	BYTE		; READ 2 FRAMES
 	STA	XHI
 	BSR	BYTE
 	STA	XLOW
-	LDX	XHI	(X) ADDRESS WE BUILT
+	LDX	XHI				; (X) ADDRESS WE BUILT
 	RTS
 **
 * INPUT BYTE (TWO FRAMES)
@@ -99,15 +100,15 @@
 	RTS
 **
 * CHANGE MEMORY (M AAAA DD NN)
-CHANGE	BSR	BADDR	BUILD ADDRESS
+CHANGE	BSR	BADDR		; BUILD ADDRESS
 	BSR	OUTS
 CHANG	LDX	XHI
-	BSR	OUT2HS	PRINT DATA (OLD)
+	BSR	OUT2HS			; PRINT DATA (OLD)
 	LEAX	-1,X
 CHA1	BSR	INCH
 	CMPA	#$0D
 	BEQ	LF
-	CMPA	#$5E	(^)
+	CMPA	#$5E		; (^)
 	BEQ	VA
 	LBSR	INHEX2
 	BSR	BYTE2
@@ -163,10 +164,10 @@
 	LEAX	1,X
 	RTS
 **
-OUT4HS	BSR	OUT2H	OUTPUT 4 HEX CHAR + SPACE
-OUT2HS	BSR	OUT2H	OUTPUT 2 HEX CHAR + SPACE
-OUTS	LDA	#$20	SPACE
-	BRA	OUTCH	(BSR & RTS)
+OUT4HS	BSR	OUT2H		; OUTPUT 4 HEX CHAR + SPACE
+OUT2HS	BSR	OUT2H		; OUTPUT 2 HEX CHAR + SPACE
+OUTS	LDA	#$20		; SPACE
+	BRA	OUTCH			; (BSR & RTS)
 **
 * PRINT STRING POINTED AT BY X-REG *
 * TERMINATOR=00
@@ -189,7 +190,7 @@
 * ENTER POWER  ON SEQUENCE
 START	EQU	*
 	LDS	#STACK
-	STS	SP	INZ TARGET'S STACK PNTR
+	STS	SP				; INZ TARGET'S STACK PNTR
 	LBSR	INZACI
 	LDX	#STACK
 	LDB	#12
@@ -199,22 +200,22 @@
 	BNE	CL
 	LDX	#LOGO
 	LBSR	PSTR
-CONTRL	LDS	#STACK	SET CONTRL STACK POINTER
+CONTRL	LDS	#STACK		; SET CONTRL STACK POINTER
 	CLR	OUTSW
 	LDX	#MCL
-	BSR	PSTR	PRINT DATA STRING
-	LBSR	INCH	READ CHARACTER
+	BSR	PSTR			; PRINT DATA STRING
+	LBSR	INCH		; READ CHARACTER
 	TFR	A,B
-	BSR	OUTS	PRINT SPACE
+	BSR	OUTS			; PRINT SPACE
 	CMPB	#'L
 	BNE	*+5
 	LBRA	LOAD
 	CMPB	#'M
 	LBEQ	CHANGE
 	CMPB	#'R
-	BEQ	PRINT	STACK
+	BEQ	PRINT			; STACK
 	CMPB	#'P
-	LBEQ	PUNCH	PRINT/PUNCH
+	LBEQ	PUNCH		; PRINT/PUNCH
 	CMPB	#'C
 	BEQ	CONT
 	CMPB	#'D
@@ -228,16 +229,16 @@
 	LDA	,S
 	ORA	#$80
 	STA	,S
-	RTI		GO
+	RTI					; GO
 **
 * ENTER FROM SOFTWARE INTERRUPT 2
 SFE2	EQU	*
-	STS	SP	SAVE TARGET'S STACK POINTER
+	STS	SP				; SAVE TARGET'S STACK POINTER
 	BRA	PRINT
 **
 * ENTER FROM SOFTWARE INTERRUPT
 SFE	EQU	*
-	STS	SP	SAVE TARGET'S STACK POINTER
+	STS	SP				; SAVE TARGET'S STACK POINTER
 * DECREMENT P-COUNTER
 	TFR	S,X
 	TST	11,X
@@ -249,21 +250,21 @@
 PRINT	LDX	#RHDR
 	LBSR	PSTR
 	LDX	SP
-	LBSR	OUT2HS	CONDITION CODES
-	LBSR	OUT2HS	ACC-A
-	LBSR	OUT2HS	ACC-B
-	LBSR	OUT2HS	DP
-	LBSR	OUT4HS	X-REG
-	LBSR	OUT4HS	Y-REG
-	LBSR	OUT4HS	U-STACK
-	LBSR	OUT4HS	P-COUNTER
+	LBSR	OUT2HS		; CONDITION CODES
+	LBSR	OUT2HS		; ACC-A
+	LBSR	OUT2HS		; ACC-B
+	LBSR	OUT2HS		; DP
+	LBSR	OUT4HS		; X-REG
+	LBSR	OUT4HS		; Y-REG
+	LBSR	OUT4HS		; U-STACK
+	LBSR	OUT4HS		; P-COUNTER
 	LDX	#SP
-	LBSR	OUT4HS	STACK POINTER
+	LBSR	OUT4HS		; STACK POINTER
 	LBRA    CONTRL
 
 **
-CONT	LDS	SP	RESTORE PGM'S STACK PTR
-	RTI		GO
+CONT	LDS	SP			; RESTORE PGM'S STACK PTR
+	RTI					; GO
 **
 DUMP	LBSR	GETADD
 	LDX	#DHDR
@@ -327,7 +328,7 @@
 * PUNCH FROM BEGINING ADDRESS (BEGA) THRU ENDING
 * ADDRESS (ENDA)
 *
-MTAPE1	FCB	$D,$A,'S,'1,0	PUNCH FORMAT
+MTAPE1	FCB	$D,$A,'S,'1,0	; PUNCH FORMAT
 MCL	FCB	$D,$A,'*,0	C/R,L/F
 MEOF	FCB	$D,$A,'S,'9,0
 RHDR	FCB	$D,$A
@@ -338,12 +339,14 @@
 	FCB	$D,$A,0
 LOGO	FCB	$D,$A
 	FCC	/*** MPB6809 monitor ver1.00 ***/
+	FCB	$D,$A
+	FCC	/Ported to MUTIF09 6809 Single Board Computer/
 	FCB	$D,$A,0
 **
 PUNCH	EQU	*
 	LBSR	GETADD
 	LDX	BEGA
-	STX	TW	TEMP BEGINING ADDRESS
+	STX	TW				; TEMP BEGINING ADDRESS
 PUN11	LDA	ENDA+1
 	SUBA	TW+1
 	LDB	ENDA
@@ -369,14 +372,14 @@
 	BSR	PUNT2
 * PUNCH DATA
 	LDX	TW
-PUN32	BSR	PUNT2	PUNCH ONE BYTE (2 FRAMES)
-	DEC	TEMP	DEC BYTE COUNT
+PUN32	BSR	PUNT2		; PUNCH ONE BYTE (2 FRAMES)
+	DEC	TEMP			; DEC BYTE COUNT
 	BNE	PUN32
 	STX	TW
 	COMB
 	PSHS	B
 	TFR	S,X
-	BSR	PUNT2	PUNCH CHECKSUM
+	BSR	PUNT2			; PUNCH CHECKSUM
 	PULS	B
 	LDX	TW
 	LEAX	-1,X
@@ -398,31 +401,32 @@
 	FDB	START
 **
 
-	ORG	$DF80
-IOV	RMB	2	IO INTERRUPT POINTER
-BEGA	RMB	2	BEGINING ADDR PRINT/PUNCH
-ENDA	RMB	2	ENDING ADDR PRINT/PUNCH
-NIO	RMB	2	NMI INTERRUPT POINTER
-CKSM	RMB	1	CHECKSUM
-BYTECT	RMB	1	BYTE COUNT
-XHI	RMB	1	XREG HIGH
-XLOW	RMB	1	XREG LOW
-TEMP	RMB	1	CHAR COUNT (INADD)
-TW	RMB	2	TEMP/
-MCONT	RMB	1	TEMP
+*	ORG	$DF80
+	ORG	$7F80
+IOV	RMB	2				; IO INTERRUPT POINTER
+BEGA	RMB	2			; BEGINING ADDR PRINT/PUNCH
+ENDA	RMB	2			; ENDING ADDR PRINT/PUNCH
+NIO	RMB	2				; NMI INTERRUPT POINTER
+CKSM	RMB	1			; CHECKSUM
+BYTECT	RMB	1			; BYTE COUNT
+XHI	RMB	1				; XREG HIGH
+XLOW	RMB	1			; XREG LOW
+TEMP	RMB	1			; CHAR COUNT (INADD)
+TW	RMB	2				; TEMP/
+MCONT	RMB	1			; TEMP
 OUTSW	RMB	1
 	RMB	46
 * REGISTERS FOR GO
-STACK	RMB	1	CONDITION CODES
-	RMB	1	ACC-A
-	RMB	1	ACC-B
-	RMB	1	DP
-	RMB	2	X-REG
-	RMB	2	Y-REG
-	RMB	2	U-STACK
-	RMB	2	P-COUNTER
-SP	RMB	1	S-HIGH
-	RMB	1	S-LOW
+STACK	RMB	1			; CONDITION CODES
+	RMB	1				; ACC-A
+	RMB	1				; ACC-B
+	RMB	1				; DP
+	RMB	2				; X-REG
+	RMB	2				; Y-REG
+	RMB	2				; U-STACK
+	RMB	2				; P-COUNTER
+SP	RMB	1				; S-HIGH
+	RMB	1				; S-LOW
 * END REGISTERS FOR GO
 	END
 
